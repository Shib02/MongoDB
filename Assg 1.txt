db.movies.insert({title:'Fight Club',writer:'Chuck Palahniuko',year:1999,actors:['Brad Pitt','Edward Norton']})

db.movies.insert({title:'Pulp Fiction',writer:'Quentin Tarantino',year:1994,actors:['John Travolta','Uma Thurman']})

db.movies.insert({title:'Inglorious Basterds',writer:'Quentin Tarantino',year:2009,actors:['Brad Pitt','Diane Kruger','Eli Roth']})

db.movies.insert({title:'The Hobbit: An Unexpected Journey',writer:'J.R.R. Tolkien',year:2012,franchise: 'The Hobbit'})

db.movies.insert({title:'The Hobbit: The Desolation of Smaug',writer:'J.R.R. Tolkien',year:2013,franchise:'The Hobbit'})

db.movies.insert({title:'The Hobbit: The Battle of Five Armies',writer:'J.R.R. Tolkien',year:2012,franchise:'The Hobbit',synopsis:'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'})

db.movies.insert({title:'Avatar'})

db.movies.insert({title:"Pee Wee Herman's Big Adventure"})

   Find

 db.movies.find()
 db.movies.find({writer:"Quentin Tarantino"})
 db.movies.find({actors:"Brad Pitt"})
 db.movies.find({year:{$gte:1990,$lt:2000}})
 

   Update 

 db.movies.update({title:'The Hobbit: An Unexpected Journey'},{$set: {synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited roup of dwarves to reclaim their mountain home = and the gold within it - from the dragon smaug.'} })
 db.movies.update({title:'The Hobbit: The desolation of Smaug'},{$set: {synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious magical ring.'} })
 db.movies.update({title:'Pulp Fiction'},{$push:{actors: Samuel L. Jackson}})

   Text Search


 db.movies.find({$text:{$search:'Bilbo'}})
 db.movies.find({$text:{$search:'Gandalf'}})
 db.movies.find({$text:{$search:'Bilbo -Gandalf'}})                             
 db.movies.find({$text:{$search:"'gold' 'dragon'"}})               

   Delete 

db.movies.remove({title: "Avatar"})

db.movies.remove({title: "Pee Wee Herman's Big Adventure"})

   Relationships

db.createCollection('users')

db.users.insertMany([

{  username: "GoodGuyGreg", first_name:"Good Guy",last_name:"Greg"},
{  username: "ScumbagSteve", full_name:{first_name:"Scumbag",last_name:"Steve"} }
  ]);

db.posts.insertMany([

{  username: "GoodGuyGreg", title:"Passes out at party",body:"Wakes up early and cleans house"},
{  username: "GoodGuyGreg", title:"Steals your identity",body:"Raises your credit score"},

{  username: "GoodGuyGreg", title:"Reports a bug in your code",body:"Sends you a pull request"},

{  username: "ScumbagSteve", title:"Borrows something",body:"Sells it"},

{  username: "ScumbagSteve", title:"Borrows everything",body:"The end"},

{  username: "ScumbagSteve", title:"Forks your repo on github",body:"Sets to private"}
  ]);

db.comments.insertMany([

{  username: "GoodGuyGreg", comment:"Hope you got a good deal!",post:"606g49ca865ea1cba8e2gh32"},
{  username: "GoodGuyGreg", comment:"What's mine is yours!",post:"606g49ca845ea3cba8e2gh33"},

{  username: "GoodGuyGreg", comment:"Don't violate the licensing agreement!",post:"606g49va845ea1cba8e2gh34"},

{  username: "ScumbagSteve", comment:"It still isn't clean",post:"606g49ca845ea8cba8e2gh35"},

{  username: "ScumbagSteve", comment:"Denied your PR cause I found a hack",post:"606g49cb845ea1cbv8e2gh36"}
  ]);

 db.users.find()
 db.posts.find()
 db.posts.find({username:"GoodGuyGreg"})
 db.posts.find({username:"ScumbagSteve"})
 db.comments.find()
 db.comments.find({username:"GoodGuyGreg"})
 db.comments.find({username:"ScumbagSteve"})